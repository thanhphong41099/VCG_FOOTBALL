<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="stopAll.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /6//1n8A0LzLiQo1FJoAAAAASUVORK5CYII=
</value>
  </data>
</root>